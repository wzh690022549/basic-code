package com.haohao.demo01;
/*
An Interface is a common specification for multiple classes.
An interface is a reference data type, and the most important thing is the abstract method in it.

How to define an interface:
public interface name{
    // content.
}

Note: After the interface keyword is replaced, the generated bytecode file will still be: .java --> .class

In the case of Java 7, the interface an include:
1. The constant.
2. Abstract methods.

In the case of Java 8, you can also include additional:
3. Default methods.
4. Static methods.

In the case of Java 9, you can also include additional:
5. Private methods.


Interface usage steps:
1. Interface can not be used directly, there must be an implementation class of the interface.
Format:
    public class className implements interfaceName {
        // content.
    }
2. The implementation class of the interface must override all abstract methods in the interface.
3. Create the object of the implementation class and use it.

Precautions:
If the implementation class does not override all the abstract methods in the overriding interface, then the implementation class itself must be abstract.
 */
public class Demo01Interface {
    public static void main(String[] args) {
        MyInterfaceAbstractImpl impl = new MyInterfaceAbstractImpl();
        impl.methodAbs1();
        impl.methodAbs2();
    }
}
